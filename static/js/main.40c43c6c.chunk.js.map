{"version":3,"sources":["img/carshop2.png","img/search2.png","components/ProductCard.jsx","components/SearchInput.jsx","services/api.js","components/Category.jsx","components/Loading.jsx","Pages/Search.jsx","components/Header.jsx","components/ProductCartItems.jsx","services/localStorage.js","Pages/Cart.jsx","components/StarSelection.jsx","components/ReviewForms.jsx","components/StarFavorite.jsx","components/ReviewCard.jsx","components/DisplayReviews.jsx","components/ImageDisplay.jsx","components/ProductDetailCard.jsx","Pages/ProductDetails.jsx","components/OrderCard.jsx","Pages/Order.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductCard","this","props","productDetails","addToCart","productImg","thumbnail","productTitle","title","productPrice","price","id","freeShipping","shipping","free_shipping","data-testid","className","src","alt","to","type","onClick","Component","Search","items","products","searchDisplay","length","emptySearch","map","item","key","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","endPoint","url","getProductsDetails","getProductDescription","plain_text","Category","state","categories","getCategories","then","setState","handleCategoryClick","categoryFilter","category","name","Loading","InputSearch","pageLoading","loadingSearch","applyCategoryFilter","undefined","searchHandler","minTimeWait","results","setTimeout","handleChange","target","searchInput","value","inputFilter","onChange","placeholder","SearchInput","Header","productCartQt","searchIco","carshopIco","ProductCartItems","productQt","index","handleQuantity","availableQt","order","cart","removeProduct","disabled","toFixed","size","color","JSON","parse","localStorage","getItem","setItem","stringify","readProductReview","addReview","review","productReview","reviewHistoric","readCartInStorage","addCartInStorage","cartItems","Cart","cartItensList","productData","available_quantity","getTotalCart","checkout","loading","reloadCart","removeIndex","cartWeight","updateCart","filter","_","saveNewOrder","orders","newOrder","history","total","getNewId","getOrderHistory","push","operator","reduce","Number","Date","now","toString","toUpperCase","emptyCart","cartDisplay","StarSelection","ratingValues","productRating","reviewUpdated","star","weight","ReviewForms","checkForms","reviews","checkTextBox","every","field","checkRating","cleanInputForms","email","productId","isFilled","submitBtn","event","reloadingReview","preventDefault","scrollToBottom","prevState","window","scrollTo","document","body","scrollHeight","htmlFor","required","StarFavorite","rating","ReviewCard","DisplayReviews","storageReviews","reviewsList","allReviews","reviewInfo","ImageDisplay","picture","pictures","defaultPicture","onMouseEnter","setMainPicture","ProductDetailCard","product","addItem","description","ProductDetail","renderProductDetails","match","params","Promise","all","productDetail","productDetailLoading","reloadReviewDisplay","OrderCard","Order","loadingPage","getOrderData","fakeLoading","find","App","quantity","cartCheck","cartHistory","productIndex","findIndex","basename","exact","path","render","ProductDetails","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40c43c6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carshop2.a24a6cd0.png\";","module.exports = __webpack_public_path__ + \"static/media/search2.4bab11ab.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// import { getProductsDetails } from '../services/api';\n\n// Estilo\nimport '../styles/productCard.css';\n\nclass ProductCard extends Component {\n  render() {\n    const { productDetails, addToCart } = this.props;\n    const { thumbnail: productImg, title: productTitle,\n      price: productPrice, id,\n      shipping: { free_shipping: freeShipping } } = productDetails;\n\n    return (\n      <li\n        data-testid=\"product\"\n        className=\"product-item\"\n      >\n        <img\n          src={ productImg }\n          alt={ productTitle }\n        />\n\n        { freeShipping\n              && (\n                <span\n                  className=\"free-shipping-container\"\n                  data-testid=\"free-shipping\"\n                >\n                  Frete Grátis\n                </span>\n              )}\n        <div className=\"product-card-info\">\n          <h3>{ productTitle }</h3>\n          <Link to={ `/productdetails/${id}` } data-testid=\"product-detail-link\">\n            <p>Detalhes</p>\n          </Link>\n        </div>\n\n        <span>{`R$ ${productPrice}`}</span>\n\n        <button\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          onClick={ () => addToCart(productDetails) }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default ProductCard;\n\nProductCard.propTypes = {\n  productTitle: PropTypes.string,\n  productImg: PropTypes.string,\n  productPrice: PropTypes.number,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n\n// Estilos\nimport '../styles/searchInput.css';\n\nclass Search extends Component {\n  render() {\n    const { products, addToCart } = this.props;\n    const searchDisplay = products.length === 0;\n    const emptySearch = (\n      <p\n        data-testid=\"home-initial-message\"\n      >\n        Digite algum termo de pesquisa ou escolha uma categoria.\n      </p>);\n\n    const productsFound = (items) => (\n      <ul>\n        {items.map((item) => (\n\n          <ProductCard\n            addToCart={ addToCart }\n            key={ item.id }\n            productDetails={ item }\n          />\n\n        ))}\n      </ul>\n    );\n    return (\n\n      <div className=\"search-container\">\n        { searchDisplay\n          ? emptySearch\n          : productsFound(products) }\n      </div>\n    );\n  }\n}\nexport default Search;\n\nSearch.propTypes = {\n  products: PropTypes.shape({}),\n}.isRequired;\n","export async function getCategories() {\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  let endPoint = categoryId ? `category=${categoryId}` : `q=${query}`;\n\n  if (categoryId && query) endPoint = `category=${categoryId}&q=${query}`;\n\n  const url = `https://api.mercadolibre.com/sites/MLB/search?${endPoint}`;\n  const response = await fetch(url);\n  const data = response.json();\n  return data;\n}\n\nexport async function getProductsDetails(id) {\n  const url = `https://api.mercadolibre.com/items/${id}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductDescription(id) {\n  const url = `https://api.mercadolibre.com/items/${id}/description`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.plain_text;\n}\n\n// Codigo Bruno\n// const url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n// const response = await fetch(url);\n// const data = response.json();\n// return data;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\n\n// Estilos\nimport '../styles/category.css';\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    getCategories().then((categories) => this.setState({ categories }));\n  }\n\n  render() {\n    const { handleCategoryClick, categoryFilter } = this.props;\n    const { categories } = this.state;\n    return (\n      <div className=\"category-container\">\n        <span>Categorias</span>\n        <div className=\"category-options\">\n          {\n            categories.map((category) => (\n              <button\n                className={\n                  categoryFilter === category.id\n                    ? 'selected-category-btn' : 'default-category-btn'\n                }\n                type=\"button\"\n                key={ category.id }\n                data-testid=\"category\"\n                onClick={ () => handleCategoryClick(category.id) }\n              >\n                {category.name}\n              </button>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n\nCategory.propTypes = {\n  handleCategoryClick: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\n\n// Estilo\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"horizontal-bar\"> </div>\n    );\n  }\n}\n\nexport default Loading;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes\nimport SearchInput from '../components/SearchInput';\nimport Category from '../components/Category';\nimport Loading from '../components/Loading';\n\n// Funçôes\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass InputSearch extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loadingSearch: false,\n      searchInput: '',\n      products: [],\n      categoryFilter: undefined,\n    };\n  }\n\n  pageLoading = (state) => {\n    this.setState({\n      loadingSearch: state,\n    });\n  }\n\n  applyCategoryFilter = (categoryFilter, id) => {\n    if (categoryFilter === id) {\n      this.setState({\n        categoryFilter: undefined,\n      });\n      return false;\n    }\n    this.setState({\n      categoryFilter: id,\n    });\n    return true;\n  }\n\n  searchHandler = async (id) => {\n    const { categoryFilter } = this.state;\n    // eslint-disable-next-line no-magic-numbers\n    let minTimeWait = 500;\n    this.pageLoading(true);\n\n    if (this.applyCategoryFilter(categoryFilter, id)) {\n      minTimeWait = 0;\n      const response = await getProductsFromCategoryAndQuery(id);\n      this.setState({\n        products: response.results,\n      });\n    } else {\n      this.setState({\n        products: [],\n      });\n    }\n    setTimeout(() => this.pageLoading(false), minTimeWait);\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      searchInput: target.value,\n    });\n  }\n\n  inputFilter = async () => {\n    const { searchInput, categoryFilter } = this.state;\n    this.pageLoading(true);\n    const response = await getProductsFromCategoryAndQuery(categoryFilter, searchInput);\n    this.setState({\n      products: response.results,\n    });\n    this.pageLoading(false);\n  }\n\n  render() {\n    const {\n      loadingSearch,\n      products,\n      categoryFilter,\n    } = this.state;\n    const { addToCart } = this.props;\n\n    return loadingSearch ? <Loading /> : (\n      <div className=\"home-container\">\n        <Category\n          handleCategoryClick={ this.searchHandler }\n          categoryFilter={ categoryFilter }\n        />\n        <div className=\"side-container\">\n          <div className=\"search-input-container\">\n            <input\n              type=\"text\"\n              onChange={ this.handleChange }\n              placeholder=\"Digite aqui\"\n              data-testid=\"query-input\"\n            />\n            <button\n              type=\"submit\"\n              data-testid=\"query-button\"\n              onClick={ this.inputFilter }\n            >\n              Pesquisar\n            </button>\n          </div>\n\n          <SearchInput\n            products={ products }\n            addToCart={ addToCart }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nInputSearch.propTypes = {\n  addToCart: PropTypes.func,\n}.isRequired;\n\nexport default InputSearch;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport carshopIco from '../img/carshop2.png';\nimport searchIco from '../img/search2.png';\n\n// Estilos\n\nimport '../styles/header.css';\n\nclass Header extends Component {\n  render() {\n    const { productCartQt } = this.props;\n    return (\n      <header className=\"header-container\">\n        <h1>GP30 Online Storage</h1>\n        <div className=\"header-nav\">\n          <Link to=\"/\">\n            <img src={ searchIco } alt=\"img-search\" />\n          </Link>\n          <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n            <img src={ carshopIco } alt=\"img-carshop\" />\n          </Link>\n          <div data-testid=\"shopping-cart-size\">{ productCartQt }</div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  cartSize: PropTypes.number,\n}.isRequired;\n\nexport default Header;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Trash } from 'phosphor-react';\n\nclass ProductCartItems extends Component {\n  render() {\n    const { title, price, thumbnail, productQt, index,\n      handleQuantity, availableQt, order = false, cart = false, removeProduct,\n    } = this.props;\n\n    return (\n      <li className=\"cartProductList-container\">\n        <div className=\"cartProduct-img-title-container\">\n          <img src={ thumbnail } alt={ title } />\n          <p data-testid=\"shopping-cart-product-name\">{title}</p>\n        </div>\n        <div className=\"quantity-container\">\n          { order\n            ? <span>{ productQt }</span>\n            : (\n              <>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-decrease-quantity\"\n                  onClick={ () => handleQuantity(index, 'decrease', availableQt) }\n                  disabled={ productQt === 1 }\n                >\n                  -\n                </button>\n                <span data-testid=\"shopping-cart-product-quantity\">{productQt}</span>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-increase-quantity\"\n                  onClick={ () => handleQuantity(index, 'increase') }\n                  disabled={ productQt === availableQt }\n                >\n                  +\n                </button>\n              </>)}\n\n        </div>\n        <span className=\"product-price\">{`R$: ${(price * productQt).toFixed(2)}`}</span>\n\n        {cart\n          && (\n            <Trash\n              className=\"cart-remove-btn\"\n              size={ 25 }\n              color=\"red\"\n              onClick={ () => removeProduct(index) }\n            />\n          )}\n      </li>\n    );\n  }\n}\n\nProductCartItems.propTypes = {\n  title: PropTypes.string,\n  price: PropTypes.number,\n  thumbnail: PropTypes.string,\n}.isRequired;\n\nexport default ProductCartItems;\n","const PRODUCT_REVIEW_KEY = 'user_review';\nconst CART_ITEMS_KEY = 'cart';\n\n// Lógica reaproveitada do projeto TrybeTunes, arquivo favoriteSongsAPI.js\nif (!JSON.parse(localStorage.getItem(PRODUCT_REVIEW_KEY))) {\n  localStorage.setItem(PRODUCT_REVIEW_KEY, JSON.stringify([]));\n}\n\nif (!JSON.parse(localStorage.getItem(CART_ITEMS_KEY))) {\n  localStorage.setItem(CART_ITEMS_KEY, JSON.stringify([]));\n}\n\nexport const readProductReview = () => JSON.parse(localStorage\n  .getItem(PRODUCT_REVIEW_KEY));\n\nconst saveProductReview = (productReview) => localStorage\n  .setItem(PRODUCT_REVIEW_KEY, JSON.stringify(productReview));\n\nexport const addReview = (review) => {\n  const reviewHistoric = readProductReview();\n  saveProductReview([...reviewHistoric, review]);\n};\n\nexport const readCartInStorage = () => JSON.parse(localStorage.getItem(CART_ITEMS_KEY));\n\nexport const addCartInStorage = (cartItems) => {\n  // const prevCart = readCartInStorage();\n  localStorage.setItem(CART_ITEMS_KEY, JSON.stringify(cartItems));\n};\n\nexport const cleanCartInStorage = () => {\n  localStorage.setItem(CART_ITEMS_KEY, '[]');\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCartItems from '../components/ProductCartItems';\n\nimport {\n  addCartInStorage, readCartInStorage, cleanCartInStorage,\n} from '../services/localStorage';\n\n// Estilo\nimport '../styles/productCart.css';\nimport Loading from '../components/Loading';\n\nclass Cart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cartItems: [],\n      reloadCart: false,\n    };\n  }\n\n  componentDidMount() {\n    const cartItems = readCartInStorage();\n\n    this.setState({\n      cartItems,\n    });\n  }\n\n  getTotalCart(items) {\n    return items\n      .reduce((total, { productData }) => total + Number(productData.price), 0)\n      .toFixed(2);\n  }\n\n  getNewId() {\n    const radix = 36;\n    return Date.now().toString(radix).toUpperCase();\n  }\n\n  getOrderHistory() {\n    return JSON.parse(localStorage.getItem('orders') || '[]');\n  }\n\n  cartItensList = (items) => (\n    <div className=\"checkout-resume-container\">\n      <ol className=\"product-cart-list\">\n        {items.map(({ productData, productQt }, index) => (\n          <ProductCartItems\n            key={ productData.id }\n            title={ productData.title }\n            thumbnail={ productData.thumbnail }\n            price={ productData.price }\n            availableQt={ productData.available_quantity }\n            productQt={ productQt }\n            index={ index }\n            handleQuantity={ this.handleQuantity }\n            removeProduct={ this.removeProduct }\n            cart\n          />\n        ))}\n      </ol>\n      <div className=\"checkout-container\">\n        <div className=\"total-container\">\n          <h2>Total:</h2>\n          <span>\n            {`R$: ${this.getTotalCart(items)}`}\n          </span>\n        </div>\n        <button\n          className=\"checkout-btn default-button-hover default-click-button-effect\"\n          type=\"button\"\n          onClick={ () => this.checkout(items) }\n        >\n          Finalizar Compra\n        </button>\n      </div>\n    </div>)\n\n  loading = (state) => {\n    this.setState({\n      reloadCart: state,\n    });\n  }\n\n  removeProduct = (removeIndex) => {\n    const { cartWeight } = this.props;\n    const productsCart = readCartInStorage();\n    const updateCart = productsCart.filter((_, index) => index !== removeIndex);\n    addCartInStorage(updateCart);\n    this.setState({\n      cartItems: updateCart,\n    });\n    cartWeight();\n  }\n\n  saveNewOrder = (orders, newOrder) => {\n    localStorage.setItem('orders', JSON.stringify([...orders, newOrder]));\n  }\n\n  checkout = (items) => {\n    const { history, cartWeight } = this.props;\n    const total = this.getTotalCart(items);\n    const id = this.getNewId();\n    const newOrder = {\n      id,\n      products: items,\n      total,\n    };\n\n    const orders = this.getOrderHistory();\n\n    if (orders.length === 0) {\n      localStorage.setItem('orders', '[]');\n    }\n\n    this.saveNewOrder(orders, newOrder);\n    cleanCartInStorage();\n    cartWeight();\n\n    history.push(`/order/${id}`);\n  }\n\n  handleQuantity = (index, operator) => {\n    const { cartItems } = this.state;\n    const { cartWeight } = this.props;\n\n    const { productQt } = cartItems[index];\n    if (operator === 'increase') {\n      cartItems[index].productQt = productQt + 1;\n    }\n    if (operator === 'decrease') {\n      cartItems[index].productQt = productQt - 1;\n    }\n    addCartInStorage(cartItems);\n    this.setState({ cartItems });\n    cartWeight();\n  }\n\n  render() {\n    const { reloadCart, cartItems } = this.state;\n\n    const emptyCart = (\n      <p data-testid=\"shopping-cart-empty-message\">\n        Seu carrinho está vazio\n      </p>);\n\n    const cartDisplay = cartItems.length === 0;\n\n    return reloadCart ? <Loading /> : (\n      <div className=\"cart-itens-container\">\n        {cartDisplay\n          ? emptyCart\n          : (this.cartItensList(cartItems))}\n      </div>\n    );\n  }\n}\n\nCart.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  cartWeight: PropTypes.func,\n}.isRequired;\n\nexport default Cart;\n","import React, { Component } from 'react';\nimport { Star } from 'phosphor-react';\nimport PropTypes from 'prop-types';\n\nclass StarSelection extends Component {\n  render() {\n    const { ratingValues, productRating, reviewUpdated } = this.props;\n    return (\n      <div>\n        { ratingValues.map((star) => (\n          <Star\n            key={ star }\n            data-testid={ `${star}-rating` }\n            weight={ star <= productRating ? 'fill' : 'regular' }\n            onClick={ () => reviewUpdated(\n              { target: { name: 'productRating', value: star } },\n            ) }\n          />)) }\n      </div>\n    );\n  }\n}\n\nStarSelection.propTypes = {\n  ratingValues: PropTypes.arrayOf(PropTypes.number),\n  productRating: PropTypes.number,\n  reviewUpdated: PropTypes.func,\n}.isRequired;\n\nexport default StarSelection;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Serviços\nimport { addReview } from '../services/localStorage';\n\n// Componentes\nimport StarSelection from './StarSelection';\n\nclass ReviewForms extends Component {\n  constructor() {\n    super();\n    this.state = {\n      reviews: {\n        email: '',\n        productRating: 0,\n        review: '',\n        productId: '',\n        isFilled: false,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    this.setState((prevState) => ({\n      reviews: {\n        ...prevState.reviews,\n        productId: id,\n      },\n    }));\n  }\n\n  checkForms = (reviews) => {\n    const checkTextBox = ['email', 'review']\n      .every((field) => reviews[field].length >= 1);\n    const checkRating = reviews.productRating > 0;\n    return checkTextBox && checkRating;\n  }\n\n  cleanInputForms = () => {\n    this.setState(({ reviews: { productId } }) => ({\n      reviews: {\n        email: '',\n        productRating: 0,\n        review: '',\n        productId,\n        isFilled: false,\n      },\n    }));\n  }\n\n  submitBtn = async (event, review) => {\n    const { reloadingReview } = this.props;\n    event.preventDefault();\n    addReview(review);\n    this.cleanInputForms();\n    await reloadingReview();\n    this.scrollToBottom();\n  }\n\nreviewUpdated = ({ target }) => {\n  const { name, value } = target;\n  this.setState((prevState) => ({\n    reviews: {\n      ...prevState.reviews,\n      [name]: value,\n      isFilled: this.checkForms({ ...prevState.reviews, [name]: value }),\n    },\n  }));\n}\n\nscrollToBottom() {\n  window.scrollTo(0, document.body.scrollHeight);\n}\n\nrender() {\n  const { reviews } = this.state;\n  const { ratingValues } = this.props;\n\n  return (\n    <div className=\"forms-review-container default-shadown-card\">\n      <h3>Deixe sua avaliação!</h3>\n      <form>\n        <label\n          className=\"email-input\"\n          htmlFor=\"email-input\"\n        >\n          E-mail:\n          <input\n            data-testid=\"product-detail-email\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email-input\"\n            placeholder=\"digite seu e-mail\"\n            value={ reviews.email }\n            required\n            onChange={ this.reviewUpdated }\n          />\n        </label>\n\n        <StarSelection\n          ratingValues={ ratingValues }\n          productRating={ reviews.productRating }\n          reviewUpdated={ this.reviewUpdated }\n        />\n\n        <div className=\"form-review-msg\">\n          <textarea\n            data-testid=\"product-detail-evaluation\"\n            name=\"review\"\n            value={ reviews.review }\n            onChange={ this.reviewUpdated }\n          />\n\n          <button\n            className=\"\n            default-button-hover default-click-button-effect default-button-disable\"\n            onClick={ (event) => this.submitBtn(event, reviews) }\n            data-testid=\"submit-review-btn\"\n            type=\"submit\"\n            disabled={ !reviews.isFilled }\n          >\n            Enviar sua avaliação\n\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n\nexport default ReviewForms;\n\nReviewForms.propTypes = {\n  id: PropTypes.string,\n  submitBtn: PropTypes.func,\n  ratingValues: PropTypes.arrayOf(PropTypes.number),\n}.isRequired;\n","import React, { Component } from 'react';\nimport { Star } from 'phosphor-react';\nimport PropTypes from 'prop-types';\n\nclass StarFavorite extends Component {\n  render() {\n    const { rating, ratingValues } = this.props;\n    return (\n      <div>\n        { ratingValues.map((star) => (\n          <Star\n            key={ star }\n            weight={ star <= rating ? 'fill' : 'regular' }\n          />)) }\n      </div>\n    );\n  }\n}\n\nStarFavorite.propTypes = {\n  rating: PropTypes.number,\n  ratingValues: PropTypes.arrayOf(PropTypes.number),\n}.isRequired;\n\nexport default StarFavorite;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes\nimport StarFavorite from './StarFavorite';\n\nclass ReviewCard extends Component {\n  render() {\n    const { review: { email, productRating, review }, ratingValues } = this.props;\n    return (\n      <div className=\"product-review default-shadown-card\">\n        <div className=\"review-left-side\">\n          <p>{email}</p>\n        </div>\n        <div className=\"review-right-side\">\n          <div className=\"rating-container\">\n            <StarFavorite\n              rating={ productRating }\n              ratingValues={ ratingValues }\n            />\n          </div>\n          <p>\n            {review}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nReviewCard.propTypes = {\n  review: PropTypes.shape({\n    email: PropTypes.string,\n    productRating: PropTypes.string,\n    review: PropTypes.string,\n  }),\n  ratingValues: PropTypes.arrayOf(PropTypes.number),\n}.isRequired;\n\nexport default ReviewCard;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Serviços\nimport { readProductReview } from '../services/localStorage';\n\n// Componentes\nimport ReviewCard from './ReviewCard';\n\nclass DisplayReviews extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reviewsList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.storageReviews();\n  }\n\n  storageReviews = () => {\n    const reviewsList = readProductReview();\n    this.setState({\n      reviewsList,\n    });\n  }\n\n  // Index como key provisório, criar uma lógica de key depois.\n  allReviews = (reviewsList) => {\n    reviewsList.map((review, index) => (<ReviewCard key={ index } review={ review } />));\n  }\n\n  render() {\n    const { reviewsList } = this.state;\n    const { productId, ratingValues } = this.props;\n\n    return (\n      <div className=\"review-history-container\">\n        {reviewsList\n          .filter((reviewInfo) => reviewInfo.productId === productId)\n          .map((review, index) => (\n            <ReviewCard\n              key={ index }\n              review={ review }\n              ratingValues={ ratingValues }\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nDisplayReviews.propTypes = {\n  productId: PropTypes.string,\n  ratingValues: PropTypes.arrayOf(PropTypes.number),\n}.isRequirepd;\n\nexport default DisplayReviews;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ImageDisplay extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      picture: '',\n    };\n  }\n\n  componentDidMount() {\n    const { pictures } = this.props;\n    const [defaultPicture] = pictures;\n\n    this.setState({\n      picture: defaultPicture.url,\n    });\n  }\n\n  setMainPicture(url) {\n    this.setState({\n      picture: url,\n    });\n  }\n\n  render() {\n    const { pictures } = this.props;\n    const { picture } = this.state;\n    const thumbQuantity = 5;\n\n    return (\n      <div className=\"pictures-container\">\n        <div className=\"mini-pictures\">\n          {pictures.filter((_, index) => index < thumbQuantity).map(({ id, url }) => (\n            <img\n              key={ id }\n              src={ url }\n              alt={ url }\n              onMouseEnter={ () => this.setMainPicture(url) }\n            />\n          ))}\n        </div>\n        <div className=\"main-picture\">\n          <img\n            src={ picture }\n            alt=\"\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nImageDisplay.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    url: PropTypes.string,\n  })),\n}.isRequired;\n\nexport default ImageDisplay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes\nimport ImageDisplay from './ImageDisplay';\n\nclass ProductDetailCard extends Component {\n  render() {\n    const { product, addItem } = this.props;\n    return (\n      <div className=\"product-detail-card\">\n\n        <div className=\"top-container\">\n          <ImageDisplay pictures={ product.pictures } />\n\n          <div className=\"info-container\">\n\n            <h2>{product.title}</h2>\n\n            <div className=\"product-delivery-info\">\n              { `Envio: Frete ${product.shipping.free_shipping ? 'Grátis' : 'Pago'}` }\n            </div>\n\n            <div className=\"product-price\">\n              { `R$: ${product.price}` }\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={ () => addItem(product) }\n            >\n              Adicionar ao carrinho\n            </button>\n\n          </div>\n        </div>\n        <div className=\"product-description\">\n          <h3>Descrição:</h3>\n          <p>\n            {\n              product.description.length > 0\n                ? product.description\n                : 'Produto sem descrição'\n            }\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetailCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    price: PropTypes.number,\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool,\n    }),\n    picture: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  }),\n}.isRequired;\n\nexport default ProductDetailCard;\n","// Bibliotecas\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Serviços\nimport { getProductsDetails, getProductDescription } from '../services/api';\n\n// Componentes\nimport ReviewForms from '../components/ReviewForms';\nimport DisplayReviews from '../components/DisplayReviews';\nimport Loading from '../components/Loading';\nimport ProductDetailCard from '../components/ProductDetailCard';\n\n// Estilos\nimport '../styles/productDetails.css';\nimport '../styles/reviewForms.css';\n\nclass ProductDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      productDetail: {},\n      productDetailLoading: true,\n      productId: '',\n      // eslint-disable-next-line no-magic-numbers\n      ratingValues: [1, 2, 3, 4, 5],\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductDetails();\n  }\n\n  renderProductDetails = async () => {\n    const { match: { params: { id } } } = this.props;\n    const [productDetail, description] = await Promise.all([\n      await getProductsDetails(id),\n      await getProductDescription(id),\n    ]);\n\n    this.setState({\n      productDetail: { ...productDetail, description },\n      productDetailLoading: false,\n      productId: id,\n      reloadReviewDisplay: true,\n    });\n  }\n\n  reloadingReview = () => {\n    this.setState({\n      reloadReviewDisplay: false,\n    }, () => this.setState({\n      reloadReviewDisplay: true,\n    }));\n  }\n\n  render() {\n    const { productDetail, productDetailLoading, productId,\n      reloadReviewDisplay, ratingValues,\n    } = this.state;\n    const { addToCart } = this.props;\n\n    return productDetailLoading\n      ? <Loading /> : (\n        <>\n          <div className=\"product-detail-container\">\n            <ProductDetailCard\n              product={ productDetail }\n              addItem={ addToCart }\n            />\n          </div>\n          <div className=\"review-container\">\n            <ReviewForms\n              id={ productId }\n              reloadingReview={ this.reloadingReview }\n              ratingValues={ ratingValues }\n            />\n            {!reloadReviewDisplay\n              ? <p>Carregando</p>\n              : (\n                <DisplayReviews\n                  productId={ productId }\n                  ratingValues={ ratingValues }\n                />)}\n          </div>\n        </>\n      );\n  }\n}\n\nProductDetail.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default ProductDetail;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProductCartItems from './ProductCartItems';\n\n// Estilos\nimport '../styles/orderCard.css';\n\nclass OrderCard extends Component {\n  render() {\n    const { order } = this.props;\n    return (\n      <div className=\"order-display default-shadown-card \">\n        <h2>{`Nº Pedido: ${order.id}`}</h2>\n        <ol>\n          {order.products.map(({ productData, productQt }) => (\n            <ProductCartItems\n              key={ productData.id }\n              { ...productData }\n              productQt={ productQt }\n              order\n            />\n          ))}\n        </ol>\n        <footer>\n          <h2>Total:</h2>\n          <span>{ `R$: ${order.total}`}</span>\n        </footer>\n      </div>\n    );\n  }\n}\n\nOrderCard.propTypes = {\n  order: PropTypes.shape({\n    products: PropTypes.arrayOf({\n      productData: PropTypes.shape({\n        title: PropTypes.string,\n        price: PropTypes.number,\n        thumbnail: PropTypes.string,\n      }),\n      productQt: PropTypes.number,\n    }),\n    total: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default OrderCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes\nimport Loading from '../components/Loading';\nimport OrderCard from '../components/OrderCard';\n\nclass Order extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loadingPage: true,\n      order: {},\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } }, history } = this.props;\n    const order = this.getOrderData(id);\n\n    if (!order) return history.push('/pagenotfound');\n\n    this.setState({\n      order,\n    });\n\n    this.fakeLoading();\n  }\n\n  getOrderData(id) {\n    const orders = JSON.parse(localStorage.getItem('orders'));\n\n    return orders.find((order) => order.id === id);\n  }\n\n  fakeLoading() {\n    const waitTime = 1000;\n    setTimeout(this.setState({ loadingPage: false }), waitTime);\n  }\n\n  render() {\n    const { loadingPage, order } = this.state;\n\n    return loadingPage\n      ? <Loading />\n      : order && <OrderCard order={ order } />;\n  }\n}\n\nOrder.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default Order;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchPage from './Pages/Search';\nimport Header from './components/Header';\nimport CartPage from './Pages/Cart';\nimport ProductDetailsPage from './Pages/ProductDetails';\nimport { addCartInStorage, readCartInStorage } from './services/localStorage';\n\n// Estilo\nimport './styles/general.css';\nimport Order from './Pages/Order';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cartItems: [],\n      productCartQt: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ cartItems: readCartInStorage() });\n    this.cartWeight();\n  }\n\n  cartWeight = () => {\n    const cartHistory = readCartInStorage();\n    const productCartQt = cartHistory\n      .map(({ productQt }) => productQt)\n      .reduce((total, quantity) => total + quantity, 0);\n    this.setState({ productCartQt });\n  }\n\n  cartCheck = (item) => {\n    const cartHistory = readCartInStorage();\n\n    const productIndex = cartHistory\n      .findIndex(({ productData }) => productData.id === item.id);\n    if (productIndex < 0) return [...cartHistory, { productData: item, productQt: 1 }];\n    const { productQt } = cartHistory[productIndex];\n    cartHistory[productIndex].productQt = productQt + 1;\n    return cartHistory;\n  }\n\n  addToCart = (item) => {\n    const product = this.cartCheck(item);\n    addCartInStorage(product);\n    this.setState({ cartItems: readCartInStorage() });\n    this.cartWeight();\n  }\n\n  render() {\n    const { cartItems, productCartQt } = this.state;\n    return (\n      <Router basename=\"trybe-project-frontend-online-store\">\n        <Header productCartQt={ productCartQt } />\n        <Switch>\n          <Route\n            exact\n            path=\"/productdetails/:id\"\n            render={ (props) => (<ProductDetailsPage\n              { ...props }\n              addToCart={ this.addToCart }\n            />) }\n          />\n\n          <Route\n            exact\n            path=\"/order/:id\"\n            render={ (props) => (<Order\n              { ...props }\n            />) }\n          />\n\n          <Route\n            exact\n            path=\"/cart\"\n            render={ (props) => (<CartPage\n              { ...props }\n              cartItems={ cartItems }\n              cartWeight={ this.cartWeight }\n            />) }\n          />\n\n          <Route\n            exact\n            path=\"/\"\n            render={ (props) => (<SearchPage\n              { ...props }\n              addToCart={ this.addToCart }\n            />) }\n          />\n\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}